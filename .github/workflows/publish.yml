name: Publish to npm

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use package.json version)'
        required: false
        type: string

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.check.outputs.should-publish }}
      current-version: ${{ steps.check.outputs.current-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Check if version changed
        id: check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this is a manual dispatch with version
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            echo "Manual dispatch with version ${{ github.event.inputs.version }}"
            echo "should-publish=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if version exists on npm
          if npm view telegram-mcp-local-server@$CURRENT_VERSION version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already exists on npm"
            echo "should-publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT_VERSION does not exist on npm"
            echo "should-publish=true" >> $GITHUB_OUTPUT
          fi

  test:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.should-publish == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Test readonly mode
        run: npm run test-readonly

  publish:
    runs-on: ubuntu-latest
    needs: [check-version, test]
    if: needs.check-version.outputs.should-publish == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update version (if manual dispatch)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"

      - name: Build project
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.current-version }}
          release_name: Release v${{ needs.check-version.outputs.current-version }}
          body: |
            ## Changes
            
            - Automated release for version ${{ needs.check-version.outputs.current-version }}
            
            ## Installation
            
            ```bash
            npx telegram-mcp-local-server
            ```
            
            Or install globally:
            
            ```bash
            npm install -g telegram-mcp-local-server
            ```
            
            ## What's Changed
            
            See the [commit history](https://github.com/${{ github.repository }}/commits/v${{ needs.check-version.outputs.current-version }}) for details.
          draft: false
          prerelease: false

  notify:
    runs-on: ubuntu-latest
    needs: [check-version, publish]
    if: always()
    steps:
      - name: Notify success
        if: needs.publish.result == 'success'
        run: |
          echo "üéâ Successfully published telegram-mcp-local-server@${{ needs.check-version.outputs.current-version }} to npm!"
          echo "üì¶ Available at: https://www.npmjs.com/package/telegram-mcp-local-server"

      - name: Notify failure
        if: needs.publish.result == 'failure'
        run: |
          echo "‚ùå Failed to publish telegram-mcp-local-server@${{ needs.check-version.outputs.current-version }}"
          exit 1

      - name: Notify skipped
        if: needs.check-version.outputs.should-publish == 'false'
        run: |
          echo "‚è≠Ô∏è Skipped publishing - version ${{ needs.check-version.outputs.current-version }} already exists on npm"