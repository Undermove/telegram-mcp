#!/usr/bin/env node

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å–µ—Å—Å–∏–∏ Telegram
const { TelegramClient } = require('telegram');
const { StringSession } = require('telegram/sessions');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

function question(query) {
  return new Promise((resolve) => {
    rl.question(query, resolve);
  });
}

async function main() {
  console.log('=== Telegram Session Helper ===\n');
  console.log('–≠—Ç–∞ —É—Ç–∏–ª–∏—Ç–∞ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–∞.');
  console.log('–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è API –∫–ª—é—á–∏ —Å https://my.telegram.org/\n');

  try {
    const apiId = await question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API ID: ');
    const apiHash = await question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API Hash: ');

    console.log('\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...');
    
    const stringSession = new StringSession('');
    const client = new TelegramClient(stringSession, parseInt(apiId), apiHash, {
      connectionRetries: 5,
    });

    await client.start({
      phoneNumber: async () => await question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã): '),
      password: async () => await question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: '),
      phoneCode: async () => await question('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS: '),
      onError: (err) => console.error('–û—à–∏–±–∫–∞:', err),
    });

    console.log('\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ Telegram!');
    
    const sessionString = client.session.save();
    console.log('\nüîë –í–∞—à–∞ —Å—Ç—Ä–æ–∫–∞ —Å–µ—Å—Å–∏–∏:');
    console.log(`"${sessionString}"`);
    
    console.log('\nüìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ sessionString –ø—Ä–∏ –≤—ã–∑–æ–≤–µ telegram_connect');
    console.log('‚ö†Ô∏è  –•—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ –∏ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å –µ–π —Å –¥—Ä—É–≥–∏–º–∏!');

    await client.disconnect();
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
  } finally {
    rl.close();
  }
}

main();